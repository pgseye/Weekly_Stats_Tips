quarto add jmgirard/embedpdf
library(flextable)
#| label: emmeans
emmeans(mod_interact, ~ sex + age, type = "response") |>
data.frame() |>
flextable() |>
colformat_double(digits = 2, na_str = "N/A") |>
set_table_properties(layout = "autofit") |>
height(height = 1, unit = "cm") |>
hrule(rule = "atleast", part = "header") |>
align(align = "center", part = "body") |>
flextable::font(fontname = "Consolas", part = "all") |>
theme_vanilla()
#| label: setup
library(knitr)
library(quarto)
library(emmeans)
library(gtsummary)
library(flextable)
opts_chunk$set(echo = T,
cache = F,
prompt = F,
tidy = F,
comment = NA,
message = F,
warning = F)
#| label: aggregated data
dat_agg <- data.frame(sex = c("Male", "Female"),
hospitalised = as.numeric(c(1330, 798)),
not_hospitalised = as.numeric(c(7018,6400)))
dat_agg
#| label: crude model
mod_crude <- glm(cbind(hospitalised, not_hospitalised) ~ sex, data = dat_agg, family = binomial(link = "log"))
tbl_regression(mod_crude,
exp = T)
#| label: disaggregated data
dat_disagg <- data.frame(sex = c("Male", "Female", "Male", "Female"),
age = c("< 40", "< 40", "≥ 40", "≥ 40"),
hospitalised = as.numeric(c(966, 460, 364, 348)),
not_hospitalised = as.numeric(c(3146, 3000, 3872, 3400)))
dat_disagg
#| label: adjusted model confounding
mod_confound <- glm(cbind(hospitalised, not_hospitalised) ~ sex + age, data = dat_disagg, family = binomial(link = "log"))
tbl_regression(mod_confound,
exp = T)
#| label: adjusted model effect modification
mod_interact <- glm(cbind(hospitalised, not_hospitalised) ~ sex * age, data = dat_disagg, family = binomial(link = "log"))
tbl_regression(mod_interact,
exp = T)
#| label: emmeans
emmeans(mod_interact, ~ sex + age, type = "response") |>
data.frame() |>
flextable() |>
colformat_double(digits = 2, na_str = "N/A") |>
set_table_properties(layout = "autofit") |>
height(height = 1, unit = "cm") |>
hrule(rule = "atleast", part = "header") |>
align(align = "center", part = "body") |>
flextable::font(fontname = "Consolas", part = "all") |>
theme_vanilla()
#| label: emmeans
emmeans(mod_interact, ~ sex + age, type = "response") |>
data.frame() |>
flextable() |>
colformat_double(digits = 3, na_str = "N/A") |>
set_table_properties(layout = "autofit") |>
height(height = 1, unit = "cm") |>
hrule(rule = "atleast", part = "header") |>
align(align = "center", part = "body") |>
flextable::font(fontname = "Consolas", part = "all") |>
theme_vanilla()
#| label: risk ratios
emmeans(mod_interact, ~ sex + age, type = "response") |> pairs(rev = T) |>
data.frame() |>
flextable() |>
colformat_double(digits = 3, na_str = "N/A") |>
set_table_properties(layout = "autofit") |>
height(height = 1, unit = "cm") |>
hrule(rule = "atleast", part = "header") |>
align(align = "center", part = "body") |>
flextable::font(fontname = "Consolas", part = "all") |>
theme_vanilla()
#| label: risk ratios custom
emm <- emmeans(mod_interact, ~ sex + age, type = "response") # save the estimated risks
custom <- list(`The effect of being male in younger individuals` = c(-1,1,0,0),
`The effect of being male in older individuals` = c(0,0,-1,1),
`The effect of being older in females` = c(-1,0,1,0),
`The effect of being older in males` = c(0,-1,0,1)) # create custom grid of RR's to estimate
contrast(emm, custom) |>
summary(infer = T) |>
data.frame() |>
flextable() |>
colformat_double(digits = 3, na_str = "N/A") |>
set_table_properties(layout = "autofit") |>
height(height = 1, unit = "cm") |>
hrule(rule = "atleast", part = "header") |>
align(align = "center", part = "body") |>
flextable::font(fontname = "Consolas", part = "all") |>
theme_vanilla()
#| label: risk ratios
#| tbl-cap: All Pairwise Risk Ratios
emmeans(mod_interact, ~ sex + age, type = "response") |> pairs(rev = T) |>
data.frame() |>
flextable() |>
colformat_double(digits = 3, na_str = "N/A") |>
set_table_properties(layout = "autofit") |>
height(height = 1, unit = "cm") |>
hrule(rule = "atleast", part = "header") |>
align(align = "center", part = "body") |>
flextable::font(fontname = "Consolas", part = "all") |>
theme_vanilla()
emmeans(mod_interact, ~ sex + age, type = "response") |> pairs(rev = T) |>
data.frame() |>
flextable() |>
colformat_double(digits = 3, na_str = "N/A") |>
set_table_properties(layout = "autofit") |>
height(height = 1, unit = "cm") |>
hrule(rule = "atleast", part = "header") |>
align(align = "center", part = "body") |>
flextable::font(fontname = "Consolas", part = "all") |>
theme_vanilla()
emmeans(mod_interact, ~ sex + age, type = "response") |> pairs(rev = T) |>
data.frame()
emmeans(mod_interact, ~ sex + age, type = "response") |> pairs(rev = T) |>
data.frame() |>
flextable()
#| label: setup
library(knitr)
library(quarto)
library(emmeans)
library(flextable)
suppressPackageStartupMessages(library(gtsummary))
opts_chunk$set(echo = T,
cache = F,
prompt = F,
tidy = F,
message = F,
warning = F)
#| label: aggregated_data
dat_agg <- data.frame(sex = c("Male", "Female"),
hospitalised = as.numeric(c(1330, 798)),
not_hospitalised = as.numeric(c(7018,6400)))
dat_agg
#| label: crude model
mod_crude <- glm(cbind(hospitalised, not_hospitalised) ~ sex, data = dat_agg, family = binomial(link = "log"))
tbl_regression(mod_crude, exp = T)
#| label: disaggregated_data
dat_disagg <- data.frame(sex = c("Male", "Female", "Male", "Female"),
age = c("< 40", "< 40", "≥ 40", "≥ 40"),
hospitalised = as.numeric(c(966, 460, 364, 348)),
not_hospitalised = as.numeric(c(3146, 3000, 3872, 3400)))
dat_disagg
#| label: adjusted model confounding
mod_confound <- glm(cbind(hospitalised, not_hospitalised) ~ sex + age, data = dat_disagg, family = binomial(link = "log"))
tbl_regression(mod_confound, exp = T)
#| label: adjusted_model_effect_modification
mod_interact <- glm(cbind(hospitalised, not_hospitalised) ~ sex * age, data = dat_disagg, family = binomial(link = "log"))
tbl_regression(mod_interact, exp = T)
#| label: setup
library(knitr)
library(quarto)
library(emmeans)
library(flextable)
suppressPackageStartupMessages(library(gtsummary))
opts_chunk$set(echo = T,
cache = F,
prompt = F,
tidy = F,
message = F,
warning = F)
#| label: aggregated_data
dat_agg <- data.frame(sex = c("Male", "Female"),
hospitalised = as.numeric(c(1330, 798)),
not_hospitalised = as.numeric(c(7018,6400)))
dat_agg
#| label: crude model
mod_crude <- glm(cbind(hospitalised, not_hospitalised) ~ sex, data = dat_agg, family = binomial(link = "log"))
tbl_regression(mod_crude, exp = T)
#| label: disaggregated_data
dat_disagg <- data.frame(sex = c("Male", "Female", "Male", "Female"),
age = c("< 40", "< 40", "≥ 40", "≥ 40"),
hospitalised = as.numeric(c(966, 460, 364, 348)),
not_hospitalised = as.numeric(c(3146, 3000, 3872, 3400)))
dat_disagg
#| label: adjusted model confounding
mod_confound <- glm(cbind(hospitalised, not_hospitalised) ~ sex + age, data = dat_disagg, family = binomial(link = "log"))
tbl_regression(mod_confound, exp = T)
#| label: adjusted_model_effect_modification
mod_interact <- glm(cbind(hospitalised, not_hospitalised) ~ sex * age, data = dat_disagg, family = binomial(link = "log"))
tbl_regression(mod_interact, exp = T)
#| label: emmeans
#| tbl-cap: Predicted Probabilities of Hospitalisation
emmeans(mod_interact, ~ sex + age, type = "response") |>
data.frame() |>
flextable() |>
colformat_double(digits = 3, na_str = "N/A") |>
set_table_properties(layout = "autofit") |>
height(height = 1, unit = "cm") |>
hrule(rule = "atleast", part = "header") |>
align(align = "center", part = "body") |>
flextable::font(fontname = "Consolas", part = "all") |>
theme_vanilla()
#| label: risk_ratios
#| tbl-cap: All Pairwise Risk Ratios
emmeans(mod_interact, ~ sex + age, type = "response") |> pairs(rev = T) |>
data.frame() |>
flextable() |>
colformat_double(digits = 3, na_str = "N/A") |>
set_table_properties(layout = "autofit") |>
height(height = 1, unit = "cm") |>
hrule(rule = "atleast", part = "header") |>
align(align = "center", part = "body") |>
flextable::font(fontname = "Consolas", part = "all") |>
theme_vanilla()
#| label: risk_ratios_custom
#| tbl-cap: Custom Pairwise Risk Ratios
emm <- emmeans(mod_interact, ~ sex + age, type = "response") # save the estimated risks
custom <- list(`The effect of being male in younger individuals` = c(-1,1,0,0),
`The effect of being male in older individuals` = c(0,0,-1,1),
`The effect of being older in females` = c(-1,0,1,0),
`The effect of being older in males` = c(0,-1,0,1)) # create custom grid of RR's to estimate
contrast(emm, custom) |>
summary(infer = T) |>
data.frame() |>
flextable() |>
colformat_double(digits = 3, na_str = "N/A") |>
set_table_properties(layout = "autofit") |>
height(height = 1, unit = "cm") |>
hrule(rule = "atleast", part = "header") |>
align(align = "center", part = "body") |>
flextable::font(fontname = "Consolas", part = "all") |>
theme_vanilla()
#| label: plot_risk_ratios
emmip(mod_interact, ~ sex + age, type = "response")
#| label: plot_risk_ratios
emmip(mod_interact, sex ~ age, type = "response")
#| label: plot_risk_ratios
emmip(mod_interact, sex ~ age, type = "response")
#| label: plot_risk_ratios
emmip(mod_interact, sex ~ age, type = "response") |>
theme_bw(base_size = 20)
#| label: setup
library(knitr)
library(quarto)
library(emmeans)
library(flextable)
suppressPackageStartupMessages(library(gtsummary))
opts_chunk$set(echo = T,
cache = F,
prompt = F,
tidy = F,
message = F,
warning = F)
#| label: aggregated_data
dat_agg <- data.frame(sex = c("Male", "Female"),
hospitalised = as.numeric(c(1330, 798)),
not_hospitalised = as.numeric(c(7018,6400)))
dat_agg
#| label: crude model
mod_crude <- glm(cbind(hospitalised, not_hospitalised) ~ sex, data = dat_agg, family = binomial(link = "log"))
tbl_regression(mod_crude, exp = T)
#| label: disaggregated_data
dat_disagg <- data.frame(sex = c("Male", "Female", "Male", "Female"),
age = c("< 40", "< 40", "≥ 40", "≥ 40"),
hospitalised = as.numeric(c(966, 460, 364, 348)),
not_hospitalised = as.numeric(c(3146, 3000, 3872, 3400)))
dat_disagg
#| label: adjusted model confounding
mod_confound <- glm(cbind(hospitalised, not_hospitalised) ~ sex + age, data = dat_disagg, family = binomial(link = "log"))
tbl_regression(mod_confound, exp = T)
#| label: adjusted_model_effect_modification
mod_interact <- glm(cbind(hospitalised, not_hospitalised) ~ sex * age, data = dat_disagg, family = binomial(link = "log"))
tbl_regression(mod_interact, exp = T)
#| label: emmeans
#| tbl-cap: Predicted Probabilities of Hospitalisation
emmeans(mod_interact, ~ sex + age, type = "response") |>
data.frame() |>
flextable() |>
colformat_double(digits = 3, na_str = "N/A") |>
set_table_properties(layout = "autofit") |>
height(height = 1, unit = "cm") |>
hrule(rule = "atleast", part = "header") |>
align(align = "center", part = "body") |>
flextable::font(fontname = "Consolas", part = "all") |>
theme_vanilla()
#| label: plot_risk_ratios
emmip(mod_interact, sex ~ age, type = "response") |>
theme_bw(base_size = 20)
#| label: setup
library(knitr)
library(quarto)
library(emmeans)
library(flextable)
library(ggplot2)
suppressPackageStartupMessages(library(gtsummary))
opts_chunk$set(echo = T,
cache = F,
prompt = F,
tidy = F,
message = F,
warning = F)
#| label: aggregated_data
dat_agg <- data.frame(sex = c("Male", "Female"),
hospitalised = as.numeric(c(1330, 798)),
not_hospitalised = as.numeric(c(7018,6400)))
dat_agg
#| label: crude model
mod_crude <- glm(cbind(hospitalised, not_hospitalised) ~ sex, data = dat_agg, family = binomial(link = "log"))
tbl_regression(mod_crude, exp = T)
#| label: disaggregated_data
dat_disagg <- data.frame(sex = c("Male", "Female", "Male", "Female"),
age = c("< 40", "< 40", "≥ 40", "≥ 40"),
hospitalised = as.numeric(c(966, 460, 364, 348)),
not_hospitalised = as.numeric(c(3146, 3000, 3872, 3400)))
dat_disagg
#| label: adjusted model confounding
mod_confound <- glm(cbind(hospitalised, not_hospitalised) ~ sex + age, data = dat_disagg, family = binomial(link = "log"))
tbl_regression(mod_confound, exp = T)
#| label: adjusted_model_effect_modification
mod_interact <- glm(cbind(hospitalised, not_hospitalised) ~ sex * age, data = dat_disagg, family = binomial(link = "log"))
tbl_regression(mod_interact, exp = T)
#| label: emmeans
#| tbl-cap: Predicted Probabilities of Hospitalisation
emmeans(mod_interact, ~ sex + age, type = "response") |>
data.frame() |>
flextable() |>
colformat_double(digits = 3, na_str = "N/A") |>
set_table_properties(layout = "autofit") |>
height(height = 1, unit = "cm") |>
hrule(rule = "atleast", part = "header") |>
align(align = "center", part = "body") |>
flextable::font(fontname = "Consolas", part = "all") |>
theme_vanilla()
#| label: plot_risk_ratios
emmip(mod_interact, sex ~ age, type = "response") |>
theme_bw(base_size = 20)
#| label: plot_risk_ratios
emmip(mod_interact, sex ~ age, type = "response") +
theme_bw(base_size = 20)
#| label: plot_risk_ratios
emmip(mod_interact, sex ~ age, type = "response") +
theme_bw(base_size = 15)
#| label: setup
library(knitr)
library(quarto)
library(emmeans)
library(flextable)
library(ggplot2)
suppressPackageStartupMessages(library(gtsummary))
opts_chunk$set(echo = T,
cache = F,
prompt = F,
tidy = F,
message = F,
warning = F)
#| label: aggregated_data
dat_agg <- data.frame(sex = c("Male", "Female"),
hospitalised = as.numeric(c(1330, 798)),
not_hospitalised = as.numeric(c(7018,6400)))
dat_agg
#| label: crude model
mod_crude <- glm(cbind(hospitalised, not_hospitalised) ~ sex, data = dat_agg, family = binomial(link = "log"))
tbl_regression(mod_crude, exp = T)
#| label: disaggregated_data
dat_disagg <- data.frame(sex = c("Male", "Female", "Male", "Female"),
age = c("< 40", "< 40", "≥ 40", "≥ 40"),
hospitalised = as.numeric(c(966, 460, 364, 348)),
not_hospitalised = as.numeric(c(3146, 3000, 3872, 3400)))
dat_disagg
#| label: adjusted model confounding
mod_confound <- glm(cbind(hospitalised, not_hospitalised) ~ sex + age, data = dat_disagg, family = binomial(link = "log"))
tbl_regression(mod_confound, exp = T)
#| label: adjusted_model_effect_modification
mod_interact <- glm(cbind(hospitalised, not_hospitalised) ~ sex * age, data = dat_disagg, family = binomial(link = "log"))
tbl_regression(mod_interact, exp = T)
#| label: emmeans
#| tbl-cap: Predicted Probabilities of Hospitalisation
emmeans(mod_interact, ~ sex + age, type = "response") |>
data.frame() |>
flextable() |>
colformat_double(digits = 3, na_str = "N/A") |>
set_table_properties(layout = "autofit") |>
height(height = 1, unit = "cm") |>
hrule(rule = "atleast", part = "header") |>
align(align = "center", part = "body") |>
bg(bg = "white", part = "all") |>
flextable::font(fontname = "Consolas", part = "all") |>
theme_vanilla()
data(palmer)
data("palmer")
data(survival::heart)
data("survival::heart")
data(heart)
data(heart, package="survival")
View(jasa)
View(jasa1)
View(stanford2)
View(heart)
View(jasa)
View(heart)
write.csv(heart, "heart.csv")
#dat = FileAttachment("data/heart.csv").csv({typed: true})
dat <- read.csv("data/heart.csv", header = T)
dat
#| message: false
#| warning: false
library(survival)
library(survminer)
library(tidyverse)
library(gtsummary)
library(kableExtra)
# Load data
data(GBSG2, package = "TH.data")
GBSG2 |>
select(time, cens, horTh, tsize) |>
head(10) |>
kable(align = "c", digits = 2)
# Kaplan-Meier fit
fit <- survfit(Surv(time, cens) ~ horTh, data = GBSG2)
# Plot KM fit
ggsurvplot(fit,
risk.table = TRUE,
submain = "Kaplan-Meier Survival Curves for Hormone Therapy Use") +
theme_survminer(
font.submain = 22,
font.x = 18,
font.y = 18,
font.legend = 16,
font.tickslab = 14)
cox_mod <- coxph(Surv(time, cens) ~ horTh + tsize, data = GBSG2)
tbl_regression(cox_mod, exp = T)
# Create new data grid to predict on
newdat <- expand.grid(time = seq(0, 2500, by = 50),
cens = 1,
horTh = levels(GBSG2$horTh),
tsize = c(min(GBSG2$tsize), max(GBSG2$tsize)))
# Calculate predicted survival probabilities
preds <- predict(cox_mod, newdata = newdat, type = "survival", se.fit = TRUE)
newdat$prob_surv <- preds$fit
# If wanting to calculate 95% C.I.'s...
newdat$lcl_surv <- preds$fit - 1.96*preds$se.fit
newdat$ucl_surv <- preds$fit + 1.96*preds$se.fit
# View predictions
head(newdat, 10) |>
kable(align = "c", digits = 4)
# Create 'labeller' for tumour size
tum_names <- as_labeller(
c(`3` = "Tumour Size = 3 mm", `120` = "Tumour Size = 120 mm"))
# Plot
ggplot(newdat, aes(x = time, y = prob_surv, color = horTh)) +
geom_line(linewidth = 1) +
facet_wrap(tsize ~ ., labeller = tum_names) +
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, by = 0.1)) +
labs(x = "Recurrence-Free Survival (Days)",
y = "Predicted Probability of Survival",
title = "Probability of Survival as a Function of Hormone Therapy and Tumour Size",
color = "Hormone Therapy") +
theme_bw(base_size = 20) + theme(legend.position = "bottom")
# Step 1
# Estimate the cumulative baseline hazard function
H0 <- basehaz(cox_mod, centered = F)
# Step 2
# Calculate cumulative hazard function for covariate combo 1.
H1 <- H0$hazard * exp((0 * cox_mod$coefficients[1]) + (3 * cox_mod$coefficients[2]))
# Calculate cumulative hazard function for covariate combo 2.
H2 <- H0$hazard * exp((1 * cox_mod$coefficients[1]) + (3 * cox_mod$coefficients[2]))
# Calculate cumulative hazard function for covariate combo 3.
H3 <- H0$hazard * exp((0 * cox_mod$coefficients[1]) + (120 * cox_mod$coefficients[2]))
# Calculate cumulative hazard function for covariate combo 4.
H4 <- H0$hazard * exp((1 * cox_mod$coefficients[1]) + (120 * cox_mod$coefficients[2]))
# Step 3
# Calculate survival function for covariate combo 1.
S1 <- exp(-H1)
# Calculate survival function for covariate combo 2.
S2 <- exp(-H2)
# Calculate survival function for covariate combo 3.
S3 <- exp(-H3)
# Calculate survival function for covariate combo 4.
S4 <- exp(-H4)
# Step 4
# Create dataframe of predicted survival probabilities as a function of covariate combos
surv_df <-  rbind(data.frame(combo = 1, time = H0$time, horTh = 0, tsize = 3, prob_surv = S1),
data.frame(combo = 2, time = H0$time, horTh = 1, tsize = 3, prob_surv = S2),
data.frame(combo = 3, time = H0$time, horTh = 0, tsize = 120, prob_surv = S3),
data.frame(combo = 4, time = H0$time, horTh = 1, tsize = 120, prob_surv = S4))
# Inspect each df
head(data.frame(combo = 1, time = H0$time, horTh = 0, tsize = 3, prob_surv = S1), 20) |>
kable(align = "c", digits = 4)
head(data.frame(combo = 2, time = H0$time, horTh = 1, tsize = 3, prob_surv = S2), 20) |>
kable(align = "c", digits = 4)
head(data.frame(combo = 3, time = H0$time, horTh = 0, tsize = 120, prob_surv = S3), 20) |>
kable(align = "c", digits = 4)
head(data.frame(combo = 4, time = H0$time, horTh = 1, tsize = 120, prob_surv = S4), 20) |>
kable(align = "c", digits = 4)
# Step 5
# Create 'labeller' for tumour size
tum_names <- as_labeller(
c(`3` = "Tumour Size = 3 mm", `120` = "Tumour Size = 120 mm"))
# Plot
ggplot(surv_df, aes(x = time, y = prob_surv, color = factor(horTh))) +
geom_line(linewidth = 1) +
facet_wrap(tsize ~ ., labeller = tum_names) +
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, by = 0.1)) +
labs(x = "Recurrence-Free Survival (Days)",
y = "Predicted Probability of Survival",
title = "Probability of Survival as a Function of Hormone Therapy and Tumour Size",
color = "Hormone Therapy") +
theme_bw(base_size = 20) + theme(legend.position = "bottom")
